#+title: Readme

* Contents :toc:
- [[#project-description][Project Description]]
  - [[#note][Note]]
- [[#supported-boards][Supported Boards]]
- [[#installation][Installation]]
- [[#usage][Usage]]
  - [[#udev-rules-for-linux][udev rules for linux]]
  - [[#validate-configuration][Validate configuration]]
  - [[#write-to-keyboard][Write to keyboard]]
- [[#windows][Windows]]
  - [[#compiling][Compiling]]
  - [[#running-the-application][Running the Application]]
- [[#listing-usb-devices][Listing USB devices]]
  - [[#mac][Mac]]
  - [[#linux][Linux]]
  - [[#windows-1][Windows]]
- [[#monitoring-generated-keyboard-and-mouse-events][Monitoring generated keyboard and mouse events]]
- [[#photos][Photos]]

* Project Description

** Note
This started as a fun project to learn a bit more about rust and USB. It is a hobby project and changes/features are implemented
as my free time permits. Please use caution before using this software as I assume no responsibility if it does not work or
causes problems with your device.

This is an utility for programming small keyboards like this one:

[[images/keyboard-6-1.png]]
[[images/keyboard-12-2.png]]
[[images/keyboard-3-1.jpg]]

Many of these keyboards are popular on AliExpress and Amazon, but the seller usually makes you
download a windows exe file from a google drive account to program it. It also assumes
- you use Windows (which I do not)
- is clunky/shady (imho)
- most importantly does not expose all keyboard features

There are many revs of this macropad with different number of
buttons and rotary encoder ([see some photos](#photos))

* Supported Boards
Tool has been reported to work with:
 - 3×4 with 2 rotary encoders
 - 3×3 with 2 rotary encoders (the one I have)
 - 3x2 with 1 rotary encoder  (the one I have)
 - 3x1 with 1 rotary encoder

All these keyboards share same vendor/product IDs: 1189:8840

* Installation
Clone the repository and build the tool

#+begin_example
cargo build --release
#+end_example


* Usage
** udev rules for linux
To access the device without being root, copy the 80-macropad.rules to /etc/udev/rules.d and reload udev

#+begin_example
sudo udevadm trigger
#+end_example

** Validate configuration

#+begin_example
macropad-tool validate < your-config.yml
#+end_example

Use 'show-keys' command to list all supported modifier and key names.

** Write to keyboard
Needs root access or ensure udev rules was added. For Windows, need Administrator command prompt

#+begin_example
macropad-tool program < your-config.yml
#+end_example

* Windows
** Compiling
Installing rust with the installer prompts to install visual studio community edition (which is free) and is sufficient to build the executable

** Running the Application
- You will need to install the USB Development Kit to be able to talk to the macropad. https://github.com/daynix/UsbDk/releases

* Listing USB devices

** Mac
#+begin_example
ioreg -w0 -l -p IOUSB
system_profiler SPUSBDataType
#+end_example

** Linux
#+begin_example
lsusb -v
#+end_example

** Windows
Use device manager and check the Hardware ID

* Monitoring generated keyboard and mouse events

Monitoring keyboard:

    pip3 install keyboard
    sudo python3 -m keyboard

Monitoring mouse:

    python3 -m mouse

* Photos
![](images/keyboard-12-2.png)
![](images/keyboard-3-1.jpg)
